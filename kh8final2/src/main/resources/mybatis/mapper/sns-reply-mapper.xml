<?xml version="1.0"  encoding="UTF-8"  ?>
<!-- 
	myBatis 매퍼 파일
	= DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	= namespace를 통해서 여러 개의 매퍼를 구분한다.
	= 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	= <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다.
	= 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	= parameterType은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	= resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE  mapper PUBLIC  "-//mybatis.org//DTD  Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="snsReply">
	
	<!-- 댓글 등록 -->
	<insert id="insert" parameterType="snsReplyDto">
		insert into sns_reply values
		(#{snsReplyNo}, #{memberNo}, #{snsNo}, 
		 #{snsReplyDetail}, sysdate, null , #{snsReplyNo}, 0
		)
	</insert>
	
	<!-- 대댓글 등록 -->
	<insert id="reinsert" parameterType="snsReplyDto">
		insert into sns_reply values
		(#{snsReplyNo}, #{memberNo}, #{snsNo}, 
		 #{snsReplyDetail}, sysdate, #{snsReplySuperno} , 
		 #{snsReplyGroupno}, #{snsReplyDepth}
		)
	</insert>
	
	<!-- 시퀀스 번호 -->
	<select id="sequence" resultType="int">
		select sns_reply_seq.nextval from dual
	</select>
	
	<!-- 단일 조회 -->
	<select id="get" parameterType="int" resultType="snsReplyDto">
		select * from sns_reply where sns_reply_no = #{snsReplyNo}
	</select>
	
	<!-- 페이징 목록 기능 -->
	<select id="listByPage" parameterType="map" resultType="snsReplyListVO">
	select * from (
    	select rownum rn, TMP.* from (
        	select S.*, M.member_nickname from sns_reply S left outer join member M on S.member_no = M.member_no
       		where S.sns_no = #{snsNo}
       		connect by prior S.sns_reply_no = S.sns_reply_superno
        	start with S.sns_reply_superno is null
        	order siblings by S.sns_reply_groupno desc, S.sns_reply_no asc
    	)TMP
	) where rn between ${startRow} and ${endRow}
	</select>
	
	<!-- 댓글 삭제 기능 -->
	<delete id="delete" parameterType="int">
		delete sns_reply where sns_reply_no = #{snsReplyNo}
	</delete>
	
	<!-- 댓글 갯수 갱신 기능 -->
	<update id="replyCount" parameterType="int">
		update sns set sns_reply_count = (select count(*) from sns_reply where sns_no = #{snsNo}) where sns_no = #{snsNo}
	</update>
	
	<!-- 댓글 수정 기능 -->
	<update id="edit" parameterType="snsReplyDto">
		update sns_reply set sns_reply_detail=#{snsReplyDetail} where sns_reply_no = #{snsReplyNo}
	</update>
	
</mapper> 