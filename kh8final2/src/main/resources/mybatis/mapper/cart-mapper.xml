<?xml version="1.0"  encoding="UTF-8"  ?>
<!-- 
	myBatis 매퍼 파일
	= DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	= namespace를 통해서 여러 개의 매퍼를 구분한다.
	= 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	= <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다.
	= 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	= parameterType은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	= resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE  mapper PUBLIC  "-//mybatis.org//DTD  Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cart">

	<select id="sequence" resultType="int">
		select cart_seq.nextval from dual
	</select>

	<insert id="insert" parameterType="cartDto">
		insert into cart values(
			#{cartNo}, #{memberNo}, #{itemNo}, #{quantity}
		)
	</insert>
	
	<resultMap type="CartListVO" id="CartAndOption">
		<result column="cart_no" property="cartNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="item_no" property="itemNo"/>
		<result column="item_name" property="itemName"/>
		<result column="quantity" property="quantity"/>
		<result column="category_no" property="categoryNo"/>
		<result column="item_price" property="itemPrice"/>
		<result column="item_shipping_type" property="itemShippingType"/>
		
		<collection property="optionList" javaType="java.util.List" ofType="ItemOptionDto" select="listByCartNo" column="cart_no">
			<result column="item_option_no" property="itemOptionNo"/>
			<result column="item_no" property="itemNo"/>
			<result column="item_option_group" property="itemOptionGroup"/>
			<result column="item_option_detail" property="itemOptionDetail"/>
			<result column="item_option_price" property="itemOptionPrice"/>
			<result column="item_option_required" property="itemOptionRequired"/>
		</collection>
	</resultMap>
	
	<select id="listByCartNo" parameterType="int" resultType="ItemOptionDto">
		select IO.*
		from cart C
    	inner join cart_option CO on C.cart_no = CO.cart_no
    	inner join item_option IO on CO.item_option_no = IO.item_option_no
    	where C.cart_no = ${cartNo}
	</select>
	
	<select id="cartCustom" parameterType="int" resultMap="CartAndOption">
		select 
    		C.cart_no, C.member_no, C.item_no, C.quantity, I.category_no, I.item_name, I.item_price, I.item_shipping_type
		from
			cart C inner join item I on C.item_no = I.item_no
		where
			member_no = ${memberNo}
	</select>
	
	
	<select id="payList" parameterType="itemOrderListVO" resultMap="CartAndOption">
		select 
    		C.cart_no, C.member_no, C.item_no, C.quantity, I.category_no, I.item_name, I.item_price, I.item_shipping_type
		from
			cart C inner join item I on C.item_no = I.item_no
		where cart_no in
		<foreach collection="list" open="(" close=")" separator="," item="vo">
			${vo.cartNo}
		</foreach>
	</select>
	
	<delete id="delete" parameterType="int">
		delete cart where cart_no = #{cartNo}
	</delete>
	
</mapper> 